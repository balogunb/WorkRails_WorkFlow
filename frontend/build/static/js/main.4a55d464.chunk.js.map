{"version":3,"sources":["components/review.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","theme","listItem","padding","spacing","total","fontWeight","title","marginTop","useStyles","layout","width","marginLeft","marginRight","breakpoints","up","paper","marginBottom","stepper","buttons","display","justifyContent","button","root","color","buttonGroup","height","backgroundColor","margin","container","flexWrap","textField","steps","Main","classes","React","useState","activeStep","setActiveStep","selectedIndex","setSelectedIndex","date","setDate","activeElements","setActiveElements","handleListItemClick","event","index","handleNext","handleBack","handleChanges","Fragment","CssBaseline","className","Paper","Stepper","map","label","Step","StepLabel","Typography","variant","gutterBottom","List","component","aria-label","ListItem","selected","onClick","ListItemText","primary","Button","length","noValidate","TextField","id","type","value","onChange","target","InputLabelProps","shrink","disablePadding","today","Date","now","deliveryDate","parseInt","getDeliveryCost","x","res","console","log","getResourceCost","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","main","secondary","overrides","MuiListItem","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4a55d464.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\n\n\n\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\nconst payments = [\n  { name: 'Card type', detail: 'Visa' },\n  { name: 'Card holder', detail: 'Mr John Smith' },\n  { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\n  { name: 'Expiry date', detail: '04/2024' },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function Review() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Donation Summary\n      </Typography>\n      <List disablePadding>\n\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Amount\" />\n          <Typography variant=\"subtitle1\" className={classes.total}>\n            $500.00\n          </Typography>\n        </ListItem>\n      </List>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <Typography gutterBottom>John Smith</Typography>\n          <Typography gutterBottom>{addresses.join(', ')}</Typography>\n        </Grid>\n        <Grid item container direction=\"column\" xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Payment details\n          </Typography>\n          <Grid container>\n            {payments.map((payment) => (\n              <React.Fragment key={payment.name}>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{payment.name}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{payment.detail}</Typography>\n                </Grid>\n              </React.Fragment>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Review from './review.js';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  root: {\n    width: '100%',\n    color:'#858585',\n  },\n  buttonGroup: {\n    width: '100%',\n    height: 60,\n    backgroundColor: '#F6F6F6',\n    margin: '10px 0'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '100%',\n  },\n}));\n\n\n\n\nconst steps = ['Step 1', 'Step 2', 'Step 3', 'Step 4'];\n\n// function getStepContent(step) {\n//   switch (step) {\n//     case 0:\n//       return <ProposalPage />;\n//     case 1:\n//       return <AddressForm />;\n//     case 2:\n//       return <PaymentForm />;\n//     case 3:\n//       return <Review />;\n//     default:\n//       throw new Error('Unknown step');\n//   }\n// }\n\nexport default function Main() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [selectedIndex, setSelectedIndex] = React.useState();\n  const [date,setDate] = React.useState(\"2020-12-01\");\n  const [activeElements,setActiveElements] = React.useState([false,false,false,false]);\n\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const handleDate = (event) => {\n    setDate(event.target.value);\n  };\n\n  const handleChanges = (event,index) => {\n    activeElements[index] = !activeElements[index];\n    setActiveElements([...activeElements]);\n  };\n\n  const getModule = () => {\n    var lst = [\"4 Weeks\", \"6 Weeks\", \"8 weeks\"]\n    return lst[selectedIndex];\n  }\n\n  const getDeliveryCost = () => {\n    var today = Date.now();\n    var deliveryDate = new Date(date);\n    var diff = (parseInt((deliveryDate - today) / (1000 * 60 * 60 * 24), 10));\n\n\n    if (diff < 7){\n      return '$' + 5000;\n    }\n    return '$'+ 1000;\n  }\n\n  const getResourceCost = () => {\n    var res = 0;\n    var x;\n    for (x in activeElements){\n      if (activeElements[x] === true){\n        res+= 1000;\n        console.log(x);\n      }\n\n    }\n    return '$'+res \n  }\n\n\n  if(activeStep === 0){\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n          {steps.map((label) => (\n            <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n          <React.Fragment>\n          <Typography variant=\"h6\" gutterBottom>\n          What modules are you looking to implement?\n          </Typography>\n          <div className={classes.root}>\n          <List component=\"nav\" aria-label=\"main mailbox folders\">\n          <ListItem \n          button\n          className={classes.buttonGroup}\n          selected={selectedIndex === 0}\n          onClick={(event) => handleListItemClick(event, 0)}\n          >\n          <ListItemText primary=\"Gold\" />\n          </ListItem>\n          <ListItem \n          button\n          className={classes.buttonGroup}\n          selected={selectedIndex === 1}\n          onClick={(event) => handleListItemClick(event, 1)}\n          >\n          <ListItemText primary=\"Silver\" />\n          </ListItem>\n          <ListItem \n          button\n          className={classes.buttonGroup}\n          selected={selectedIndex === 2}\n          onClick={(event) => handleListItemClick(event, 2)}\n          >\n          <ListItemText primary=\"Bronze\" />\n          </ListItem>\n          </List>\n          </div>\n          </React.Fragment>\n          <div className={classes.buttons}>\n          {activeStep !== 0 && (\n            <Button onClick={handleBack} className={classes.button}>\n            Back\n            </Button>\n            )}\n            <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleNext}\n            className={classes.button}\n            >\n            {activeStep === steps.length - 1 ? 'Donate' : 'Next'}\n            </Button>\n            </div>\n            </React.Fragment>\n            </Paper>\n          </main>\n        </React.Fragment>\n        )\n        }\n        else if (activeStep === 1){\n          return(\n            <React.Fragment>\n              <CssBaseline />\n              <main className={classes.layout}>\n                <Paper className={classes.paper}>\n                <Stepper activeStep={activeStep} className={classes.stepper}>\n                {steps.map((label) => (\n                  <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                  </Step>\n                  ))}\n                </Stepper>\n                <React.Fragment>\n                <React.Fragment>\n                <Typography variant=\"h6\" gutterBottom>\n                When are you expecting delivery?\n                </Typography>\n                <div className={classes.root}>\n                  <form className={classes.container} noValidate>\n                    <TextField\n                      id=\"date\"\n                      type=\"date\"\n                      \n                      value= {date}\n                      onChange={handleDate}\n                      className={classes.textField}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </form>\n                </div>\n                </React.Fragment>\n                <div className={classes.buttons}>\n                {activeStep !== 0 && (\n                  <Button onClick={handleBack} className={classes.button}>\n                  Back\n                  </Button>\n                  )}\n                  <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                  >\n                  {activeStep === steps.length - 1 ? 'Donate' : 'Next'}\n                  </Button>\n                  </div>\n                  </React.Fragment>\n                  </Paper>\n                </main>\n        </React.Fragment>\n        );\n      }\n        else if (activeStep === 2){\n          return(\n            <React.Fragment>\n              <CssBaseline />\n              <main className={classes.layout}>\n                <Paper className={classes.paper}>\n                <Stepper activeStep={activeStep} className={classes.stepper}>\n                {steps.map((label) => (\n                  <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                  </Step>\n                  ))}\n                </Stepper>\n                <React.Fragment>\n                <React.Fragment>\n                <Typography variant=\"h6\" gutterBottom>\n                What resources do you believe you'll need?\n                </Typography>\n                <div className={classes.root}>\n                  <List component=\"nav\" aria-label=\"main mailbox folders\">\n                    <ListItem \n                    button\n                    className={classes.buttonGroup}\n                    onClick={(event) => handleChanges(event, 0)}\n                    selected={activeElements[0]}\n                    >\n                    <ListItemText primary=\"Project Manager\" />\n                    </ListItem>\n                    <ListItem \n                    button\n                    className={classes.buttonGroup}\n                    onClick={(event) => handleChanges(event, 1)}\n                    selected={activeElements[1]}\n                    >\n                    <ListItemText primary=\"Solution Architect\" />\n                    </ListItem>\n                    <ListItem \n                    button\n                    onClick={(event) => handleChanges(event, 2)}\n                    className={classes.buttonGroup}\n                    selected={activeElements[2]}\n                    >\n                    <ListItemText primary=\"Implementation Manager\" />\n                    </ListItem>\n                    <ListItem \n                    button\n                    onClick={(event) => handleChanges(event, 3)}\n                    className={classes.buttonGroup}\n                    selected={activeElements[3]}\n                    >\n                    <ListItemText primary=\"QA Tester\" />\n                    </ListItem>\n                  </List>\n                </div>\n                </React.Fragment>\n                <div className={classes.buttons}>\n                {activeStep !== 0 && (\n                  <Button onClick={handleBack} className={classes.button}>\n                  Back\n                  </Button>\n                  )}\n                  <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                  >\n                  {activeStep === steps.length - 1 ? 'Donate' : 'Next'}\n                  </Button>\n                  </div>\n                  </React.Fragment>\n                  </Paper>\n                </main>\n        </React.Fragment>\n        );\n      }\n\n      else if (activeStep === 3){\n          return(\n            <React.Fragment>\n              <CssBaseline />\n              <main className={classes.layout}>\n                <Paper className={classes.paper}>\n                <Stepper activeStep={activeStep} className={classes.stepper}>\n                {steps.map((label) => (\n                  <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                  </Step>\n                  ))}\n                </Stepper>\n                <React.Fragment>\n                <React.Fragment>\n                <Typography variant=\"h6\" gutterBottom>\n                Review\n                </Typography>\n                <div className={classes.root}>\n                  <List disablePadding>\n                    <ListItem className={classes.listItem}>\n                      <ListItemText primary=\"Module Duration\" />\n                      <Typography variant=\"subtitle1\" className={classes.total}>\n                        {getModule()}\n                      </Typography>\n                    </ListItem>\n                    <ListItem className={classes.listItem}>\n                      <ListItemText primary=\"Delivery Fee\" />\n                      <Typography variant=\"subtitle1\" className={classes.total}>\n                        {getDeliveryCost()}\n                      </Typography>\n                    </ListItem>\n                    <ListItem className={classes.listItem}>\n                      <ListItemText primary=\"Resource Fee\" />\n                      <Typography variant=\"subtitle1\" className={classes.total}>\n                        {getResourceCost()}\n                      </Typography>\n                    </ListItem>\n                  </List>\n\n                </div>\n                </React.Fragment>\n                <div className={classes.buttons}>\n                {activeStep !== 0 && (\n                  <Button onClick={handleBack} className={classes.button}>\n                  Back\n                  </Button>\n                  )}\n                  <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                  >\n                  {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n                  </Button>\n                  </div>\n                  </React.Fragment>\n                  </Paper>\n                </main>\n        </React.Fragment>\n        );\n      }\n    }","import './App.css';\n//import Header from './components/header.js';\nimport Main from './components/main.js';\n//import StickyFooter from './components/footer.js'\n//import TreeStruct from './components/tree.js'\n\n\nfunction App() {\n  return (\n\t<Main/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\n\n\n\n\nconst theme = createMuiTheme({\n   palette: {\n      primary: {\n         main: \"#048CBA\" // This is an orange looking color\n                },\n      secondary: {\n         main: \"#2bff55\" //Another orange-ish color\n                 }\n            },\n    overrides: {\n    MuiListItem: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"#CBF0FD\",\n          color: '#048CBA',\n          \"&:hover\": {\n            backgroundColor: \"#CBF0FD\",\n          },\n        },\n      },\n      button: {\n        \"&:hover\": {\n          backgroundColor: \"#EFFBFF\",\n        },\n      },\n    },\n  },\n     });\n\nReactDOM.render(\n  <React.StrictMode>\n  \n    <ThemeProvider theme={theme}><App /></ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}